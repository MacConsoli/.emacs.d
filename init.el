;; Bootstrap packages
(require 'package)
(setq package-enable-at-startup nil)

(setq package-archives '(("org" . "http://orgmode.org/elpa/")
			 ("gnu" . "http://elpa.gnu.org/packages/")
			 ("melpa" . "https://melpa.org/packages/")))

(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))
(require 'diminish)                ;; if you use :diminish
(require 'bind-key)                ;; if you use any :bind variant

(org-babel-load-file (expand-file-name (concat user-emacs-directory "config.org")))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(comment-tags-case-sensitive t t)
 '(comment-tags-comment-start-only t t)
 '(comment-tags-lighter nil t)
 '(comment-tags-require-colon t t)
 '(comment-tags-show-faces t t)
 '(company-box-backends-colors nil t)
 '(company-box-doc-delay 0.5)
 '(company-box-icons-alist (quote company-box-icons-all-the-icons))
 '(company-box-max-candidates 50)
 '(company-box-show-single-candidate t)
 '(company-dabbrev-downcase nil)
 '(company-dabbrev-ignore-case nil)
 '(company-echo-delay 0 t)
 '(company-idle-delay 0)
 '(company-lsp-async t)
 '(company-minimum-prefix-length 2)
 '(company-require-match nil)
 '(company-tooltip-align-annotations t)
 '(company-tooltip-limit 12)
 '(custom-safe-themes
   (quote
    ("f951343d4bbe5a90dba0f058de8317ca58a6822faa65d8463b0e751a07ec887c" "728eda145ad16686d4bbb8e50d540563573592013b10c3e2defc493f390f7d83" "2d1fe7c9007a5b76cea4395b0fc664d0c1cfd34bb4f1860300347cdad67fb2f9" "34c99997eaa73d64b1aaa95caca9f0d64229871c200c5254526d0062f8074693" default)))
 '(doom-modeline-bar-width 5)
 '(doom-modeline-buffer-encoding t)
 '(doom-modeline-buffer-modification-icon t)
 '(doom-modeline-buffer-state-icon t)
 '(doom-modeline-enable-word-count t)
 '(doom-modeline-env-python-executable "ipython")
 '(doom-modeline-env-version t)
 '(doom-modeline-height 1)
 '(doom-modeline-icon t)
 '(doom-modeline-lsp t)
 '(doom-modeline-major-mode-color-icon t)
 '(doom-modeline-major-mode-icon t)
 '(doom-themes-enable-bold t)
 '(doom-themes-enable-italic t)
 '(dumb-jump-selector (quote helm))
 '(eldoc-idle-delay 0.5)
 '(elpy-modules
   (quote
    (elpy-module-company elpy-module-eldoc elpy-module-flymake elpy-module-pyvenv elpy-module-yasnippet elpy-module-django elpy-module-autodoc elpy-module-sane-defaults)))
 '(fancy-battery-show-percentage t)
 '(google-translate-output-destination (quote popup))
 '(google-translate-show-phonetic t)
 '(google-translate-translation-directions-alist (quote (("en" . "pt") ("pt" . "en"))) t)
 '(helm-M-x-fuzzy-match t)
 '(helm-autoresize-max-height 0)
 '(helm-autoresize-min-height 40)
 '(helm-buffers-fuzzy-matching t)
 '(helm-echo-input-in-header-line t)
 '(helm-ff-search-library-in-sexp t)
 '(helm-ff-skip-boring-files t)
 '(helm-imenu-fuzzy-match t t)
 '(helm-mode-to-line-cycle-in-source nil t)
 '(helm-recentf-fuzzy-match t t)
 '(helm-scroll-amount 8)
 '(helm-semantic-fuzzy-match t t)
 '(helm-split-window-in-side-p nil)
 '(helm-split-window-inside-p nil)
 '(highlight-indent-guides-auto-enabled t)
 '(highlight-indent-guides-character 9478)
 '(highlight-indent-guides-delay 0)
 '(highlight-indent-guides-method (quote character))
 '(highlight-indent-guides-responsive (quote stack))
 '(lsp-prefer-flymake nil)
 '(mode-line-format (quote ((:eval (list (nyan-create))))))
 '(multi-term-dedicated-close-back-to-open-buffer-p t t)
 '(multi-term-dedicated-select-after-open-p t t)
 '(multi-term-program "/bin/zsh" t)
 '(nyan-animate-nyancat t)
 '(nyan-wavy-trail t)
 '(org-adapt-indentation nil)
 '(org-bullets-bullet-list (quote ("☣" "☢" "☠" "⚛" "◉")) t)
 '(org-confirm-babel-evaluate t)
 '(org-edit-src-content-indentation 0)
 '(org-export-with-smart-quotes t)
 '(org-hide-emphasis-markers t)
 '(org-reveal-mathjax t t)
 '(org-reveal-root "http://cdn.jsdelivr.net/reveal.js/3.0.0/")
 '(org-src-fontfy-natively t t)
 '(org-src-fontify-natively t)
 '(org-src-preserve-indentation t)
 '(org-src-tab-acts-natively nil)
 '(package-selected-packages
   (quote
    (expand-region poetry docker-compose-mode django-snippets jinja2-mode web-mode emmet-mode python-black dockerfile-mode google-translate dumb-jump org company-auctex wakatime-mode undo-tree latex-pretty-symbols ob-ipython elpy latex-preview-pane pdf-tools comment-tags wakatime lsp-treemacs company-lsp eglot dap-mode helm-spotify-plus multi-term anzu intero haskell-mode highlight-indent-guides ob-rust rust-ob racer cargo rust-mode format-all auto-highlight-symbol swiper-helm smartparens flycheck-inline quick-peek company-prescient flyckeck yasnippet-snippets yasnippet company-quickhelp company-box company elfeed htmlize ox-reveal flyspell-lazy treemacs-magit rainbow-delimiters doom-themes org-bullets use-package)))
 '(projectile-completion-system (quote helm))
 '(python-check-command "/usr/bin/black")
 '(python-flymake-command (quote ("black")))
 '(python-shell-interpreter "ipython" nil nil "Customized with use-package elpy")
 '(python-shell-interpreter-args "-i" nil nil "Customized with use-package elpy")
 '(racer-cmd "~/.cargo/bin/racer" t)
 '(racer-rust-src-path
   "~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src" t)
 '(rmh-elfeed-org-files (quote ("~/.emacs.d/elfeed.org")))
 '(solaire-mode-remap-modeline nil)
 '(url-queue-timeout 30 t)
 '(wakatime-api-key "3ccddbd9-d242-4e40-9a9d-320c6a735ae0")
 '(wakatime-cli-path "/usr/bin/wakatime")
 '(wakatime-python-bin nil)
 '(which-key-popup-type (quote minibuffer)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ahs-definition-face ((t (:background "dark orange" :foreground "black"))))
 '(ahs-face ((t (:background "orange" :foreground "black"))))
 '(ahs-plugin-defalt-face ((t (:background "#1E2029" :foreground "dark orange"))))
 '(mode-line ((t (:height 0.9))))
 '(mode-line-inactive ((t (:height 0.9)))))
